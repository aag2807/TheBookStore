@using BookClient.Services.State.Layout
@using BookClient.Services.State.Layout.actions
@inherits StoreConnectedComponent

@if (IsModalOpen)
{
    <section data-role="modal-container" class="absolute z-[9999999999999] w-screen h-screen flex flex-col items-center justify-center z-1">

        @* remember to animate backdrop with fade in and fade out *@
        <div @onclick="CloseModal" data-role="modal-backdrop" class="absolute min-w-full min-h-screen bg-black opacity-[0.8] z-[-1]"></div>
        
        <div class="flex flex-col bg-white min-w-[500px] rounded-[26px] px-5 py-4">
            <header class="flex flex-row w-full ">
                <button class="ms-auto transition text-[20px] hover:opacity-75" @onclick="CloseModal">&times;</button>
            </header>

            <DynamicComponent Type="DynamicComponent" Parameters="Arguments"/>
        </div>
    </section>
}

@code {
    private bool IsModalOpen => Store.GetState<LayoutState>().IsModalOpen;
    private Type DynamicComponent => Store.GetState<LayoutState>().ModalComponentType!;
    private Dictionary<string, object> Arguments => Store.GetState<LayoutState>().ModalComponentArgs!;

    private void CloseModal()
    {
        Store.Dispatch(new CloseModal());
    }
}