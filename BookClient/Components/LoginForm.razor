@using BookClient.Services.State.Layout.actions
@using Core.User.Aggregates
@inherits StoreConnectedComponent


<div class="flex flex-row gap-3">
    <div class="flex flex-col">
        <h5 class="relative after:absolute after:w-full after:h-[1px] after:bottom-[0px] after:left-[0px] after:bg-[#314f6a] max-w-[fit-content] mb-3 text-[24px]">Login</h5>
        <EditForm Model="RegisterUser" class="gap-5 mb-2 flex flex-col h-full w-full" OnSubmit="HandleSubmission">
            <!-- User name -->
            <div class="flex flex-col relative">
                <img src="/assets/user-icon.svg" class="w-[25px] h-[20px] absolute bottom-[0px] translate-y-[-50%] left-[5px]" alt="">
                <label>What do we call you?</label>
                <InputText placeholder="Username" username @bind-Value="RegisterUser.Username" class=" @InputClasses"/>
                <ValidationMessage For="() => RegisterUser.Username"/>
            </div>

            <!-- User email -->
            <div class="flex flex-col relative">
                <img src="/assets/email-icon.svg" class="w-[25px] h-[20px] absolute bottom-[0px] translate-y-[-50%] left-[5px]" alt="">
                <label>Where can we reach you?</label>
                <InputText type="email" placeholder="Email" @bind-Value="RegisterUser.Email" class=" @InputClasses"/>
                <ValidationMessage For="() => RegisterUser.Email"/>
            </div>
            
            <!-- User password -->
            <div class="flex flex-col relative">
                <img src="/assets/password-icon.svg" class="w-[25px] h-[20px] absolute bottom-[0px] translate-y-[-50%] left-[5px]" alt="">
                <label>Password</label>
                <InputText type="password" placeholder="Password" @bind-Value="RegisterUser.Password" class=" @InputClasses"/>
                <ValidationMessage For="() => RegisterUser.Password"/>
            </div>
        </EditForm>
        
        <div class="my-4 w-full flex-row flex gap-5">
            <div class="flex flex-row">
                <input type="checkbox"> <span class="ms-2">Remember me!</span>
            </div>

            <a href="#" class="ms-auto text-[#314f6a] hover:text-[#314f6a] transition hover:opacity-75">Forgot password?</a>
        </div>
        <hr class="mb-6">
        <div class="flex flex-row gap-4 mb-4">
            <button @onclick="HandleSubmission" type="submit" class="ms-auto transition hover:opacity-75 py-2 px-8 rounded-full border border-1 border-[#ebe4da] bg-[#f7efe5] rounded-full w-[fit-content]">
                Login
            </button>

            <button @onclick="CloseModal" type="submit" class="ms-auto transition hover:opacity-75 py-2 px-8 rounded-full border border-1 border-[#ebe4da] bg-[#f7efe5] rounded-full w-[fit-content]">
                Cancel
            </button>
        </div>
    </div>

    <div class="flex h-full w-[200px] items-center justify-center">
        <img src="/assets/sign-in.svg" class="w-[150px] h-[150px]" alt="">
    </div>
</div>


@code {
    private const string InputClasses = "text-[14px] pr-4 focus:outline-1 focus:outline-[#314f6a] outline-0 indent-8 border border-1 border-[#ebe4da] bg-[#f7efe5] rounded-full h-[40px]";
    private RegisterUser RegisterUser { get; } = new();

    private async Task HandleSubmission()
    {
        if (string.IsNullOrWhiteSpace(RegisterUser.Email))
        {
            
        }
    }
    
    private async Task CloseModal()
    {
        Store.Dispatch(new CloseModal());
    }
}